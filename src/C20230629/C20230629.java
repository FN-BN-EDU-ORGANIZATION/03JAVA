package C20230629;


      

public class C20230629 {

		//의문점
		
		/* 정리------------------------------------------------------------------
		 
		 * 변수는 크게 멤버변수와 지역변수로 나뉜다.
		 * 클래스영역 안에서 선언된 변수를 멤버변수라고 하며, 인스턴스변수와 클래스변수로 나뉜다.
		 
		 * <인스턴스 변수>
		 * 클래스 내에서 선언된 변수로, 해당 클래스의 각 인스턴스(객체)마다 독립적으로 메모리 공간을 가지고 있는 변수
		 * 1.생성시기(메모리할당시기)
		 * 인스턴스(객체)가 생성될 때 메모리에 할당되며,해당 객체를 참조하는 객체가 없을 때 소멸한다.
		 * 2.특징
		 * 객체생성 후 변수에 접근 할 수 있으며, 인스턴스 별로 다른 값을 가질 수 있어 각각의 인스턴스(객체)마다 고유의 값을 가져야할 때는 인스턴스 변수로 선언한다.
		 * 3.선언위치
		 * 클래스영역
		 
		 * <클래스 변수>
		 * 클래스 내에서 static 키워드로 선언된 변수로, 해당 클래스의 모든 인스턴스들이 공유하는 변수
		 * 1.생성시기(메모리할당시기)
		 * 클래스가 로딩될 때 생성되어(메모리에 딱 한번만 올라간다)프로그램이 종료될때 소멸한다.
		 * 2.특징
		 * - 인스턴스 변수에 static이 붙어 있는 형태이며, 인스턴스를 생성하지 않고 클래스이름.클래스변수명 을 통해서 접근 가능하다.
		 * - 클래스 변수에 public 접근 제어자를 사용하면, 해당 클래스 외부에서도 접근할 수 있는 변수로 선언된다. 이는 다른 클래스에서 해당 클래스 변수에 직접 접근할 수 있다는 의미
		 * 3.선언위치
		 * 클래스영역
		
		 *<지역변수>
		 * 1.생성시기(메모리할당시기)
		 * - 클래스 이외의 영역에 생성되며(메서드, 생성자, 초기화블럭)변수 선언문이 수행되었을때 메모리에 할당되며 메서드 수행이 끝나면 소멸한다.
		 * 2.특징
		 * - 고로(메서드안에서만 유효함으로) 조건문, 반복문내에 선언한 지역변수가 있다면,계속 사용하기 위해서는 블록 밖에서 변수를 선언해야한다.
		 * 3.선언위치
		 * 메서드영역(접근제어자사용 x)
		 
		 * <매개변수>
		 * 메서드 호출 시 전달하는 값을 가지고 있는 변수
		 * 1.생성시기(메모리할당시기)
		 * - 지역변수와 같다(method가 호출될 때 시작, method가 끝날 때 소멸)
		 
		 * <참조변수>
		 * - 객체의 주소를 저장하는 변수로, 객체를 생성하고 해당 객체에 접근하기 위해 사용된다.
		 * - 참조 변수는 객체의 실제 데이터를 직접 저장하지 않고, 해당 객체가 저장된 메모리 주소를 참조한다.
		
		*/
	
	
	//예제1---------------------------------------------------------------------
	  
	/*
		// 인스턴스 변수
	    private int Person;

	    // 생성자
	    public C20230629(int value) {
	        Person = value;
	    }

	    // 인스턴스 메서드
	    public void displayInfo() {
	        System.out.println("Person: " + Person);
	    }

	    public static void main(String[] args) {
	    	
	        // C20230629 각각의 클래스의 인스턴스 생성
	        C20230629 myObject = new C20230629(10);
	        C20230629 myObject2 = new C20230629(20);

	        // 인스턴스 변수 사용=> 독립적인 값이 나온다
	        myObject.displayInfo(); //Person:10
	        myObject2.displayInfo();//Person:20
	        
	        */
	  
	
	    //예제2_클래스변수----------------------------------------------------------------------
	        
	/*
	            // 클래스 변수
	            private static int Person;

	            public C20230629(int value) {
	                Person = value;
	            }

	            public void displayInfo() {
	                System.out.println("Person: " + Person);
	            }

	            public static void main(String[] args) {
	                C20230629 myObject = new C20230629(10);
	                C20230629 myObject2 = new C20230629(20);
	                
	            //클래스변수는 모든 인스턴스에 공유되기 때문에 각각의 인스턴스를 생성했지만 인스턴스와 다르게 값이 동일하게 20이 나온다.
	                myObject.displayInfo(); // Person: 20
	                myObject2.displayInfo(); // Person: 20
	            }
	        }

  */
		
		//예제3_지역변수---------------------------------------------------------------------------
		
		public void displayInfo() {
			// 지역 변수
			int localVar = 10;
			System.out.println("지역변수: " + localVar);
		}

		public static void main(String[] args) {
			C20230629 myObject = new C20230629();
			myObject.displayInfo(); //지역변수: 10
        
			// 지역 블록 외부에서 호출하는 시도
			int outsideVar = myObject.localVar; // 컴파일 에러 발생
			System.out.println("외부에서 호출: " + outsideVar);
    }
    
}
		