import java.io.*;

public class Example2 {
    public static void main(String[] args) {
        int x = 5;
        int y = 10;
        if (x > 0 && y > 0) { // x와 y가 모두 0보다 큰지 확인합니다.
            System.out.println("둘 다 양수입니다.");
        } else {
            System.out.println("하나 이상의 수가 음수입니다.");
        }
    }
}
public class Example4 {
    public static void main(String[] args) {
        // Person 클래스의 인스턴스를 생성하고 이름을 설정합니다.
        Person person = new Person("John");
        System.out.println("이름: " + person.getName()); // 객체의 이름을 출력합니다.
    }
}

class Person {
    private String name; // Person 클래스의 멤버 변수인 이름을 선언합니다.

    public Person(String name) { // 생성자를 정의하여 이름을 설정합니다.
        this.name = name;
    }

    public String getName() { // 이름을 반환하는 메서드를 정의합니다.
        return name;
    }
}
public class Example6 {
    public static void main(String[] args) {
        Cat cat = new Cat(); // Cat 클래스의 인스턴스를 생성합니다.
        cat.sound(); // Cat 클래스가 Animal과 Sound 인터페이스를 모두 구현했기 때문에 sound() 메서드를 호출할 수 있습니다.
    }
}

interface Sound {
    void sound(); // 소리를 발생시키는 추상 메서드를 정의합니다.
}

abstract class Animal {
    public abstract void makeSound(); // 동물의 소리를 발생시키는 추상 메서드를 정의합니다.
}

class Cat extends Animal implements Sound {
    @Override
    public void makeSound() {
        System.out.println("야옹!"); // Animal 클래스의 추상 메서드를 오버라이딩합니다.
    }

    @Override
    public void sound() {
        makeSound(); // 인터페이스의 sound() 메서드를 구현하면서 Cat 클래스의 makeSound() 메서드를 호출합니다.
    }
}







