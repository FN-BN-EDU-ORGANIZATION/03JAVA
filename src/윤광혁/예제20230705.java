package 윤광혁;

public class 예제20230705 {
	//1 추상클레스
	//추상 클레스는 일부 메서드가 구현되지 않고 선언만 되어있는 클레스이다.
	//따라서 추상클레스는 직접 인스턴스(객체)를 생성할수 없다.
	//추상 클레스를 상속받은 자식 클레스는 추상 클레스의 메서드를 완성해야한다.
	//추상 클레스는 최소한 하나이상의 추상 메서드를 포함해야한다.
	//추상 메서드는 이름,매개변수,반환유형 만 선언하고 구현은 하지 않는다.
	//추상 메서드를 자식 클레스가 오버라이드 해서 완성한다.
	//추상 클레스도 일반 메서드를 가질수있다. 일반 메서드는 추사메서드와 달리 구현되어 있으며
	//추상 클레스를 상속받은 모든 자식 클레에서 공통적으로 사용할수있는 기능을 제공한다.
	
	//추상 클레스를 사용하면 공통된 특성과 동작을 가진 객체들의 사이의 상속관계를 명확하게 정의할수있다.
	//추상 클레스를 사용하면 상속받은 자식클레스들이 동일한 메서드 이름을 가지고 있더라도 다양한 동작을 할수있다.
	
	
	//2 인터페이스
	//인터페이스는 클레스와 달리 다중 상속을 지원하며 메서드의 선언과 상수 필드를 가질수있는 특별한 형태의 클레스이다.
	
	//인터페이스는 추상 메서드만을 가질수있다.
	
	//인터페이스는 상수필드를 가질수있다 상수필드는 static과 final 키워드로 선언되며 인터페이스 내 에서 정의된 모든필드는
	//자동으로 public static final 로 간주한다,
	
	//인터페이스는 다중상속을 지원한다 자바 클레스는 단일 상속만을 지원하지만 인터페이스는 클레스가 하나의 클레스만
	//상속 받을수 있지만 여러개의 인터페이스를 구현할수있다 이를 통해서 클레스는 여러 인터페이스의 기능과 행위를 동시에 상속 받을수있다.
	
	//인터페이스는 인스턴스화가 불가능하다. 인터페이스는 직접적으로 인스턴스를 생성할수 없고 인터페이스는 단지
	//메서드의 원형을 제공하고 실제 구현은 인터페이스를 구현하는 클레스에서 이루어진다.
	//따라서 인터페이스를 사용하기 위해서는 인터페이스를 구현한 클레스의 인스턴스를 생성하여 사용해야한다.
}
