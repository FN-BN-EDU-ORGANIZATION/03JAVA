package 윤광혁;

public class 예제20230719 {
	//1	Forward/Redirect
	//Forward 방식 페이지 요청 : 'Request'는 '유지한채' 또다른 URL 경로로 이동
	//(단 주소창의 URL 경로는 최초의 요청시의 URL경로로 유지된다)
	//Redirect 방식 페이지 요청 : 페이지에서 response.sendRedirect [경로] 로
	//새로운 request 요청 경로를 전달함으로서 기존 request값은 초기화된다.
	//주소창 URL정보도 최종 요청한 경로로 지정된다.
	
	//2 내장 객체
	//pageContext 를 통해 다양한 정보를 불러올수있다.
	//attribute > application > session > request > pageContext 가있다.
	
	//request 는 클라이언트로부터 서버로 전송되는 요청을 처리하는데 사용되는 객체이다.
	//JSP 페이지 내부에서는 이 객체를 사용하여 클아이언트가 전송한 데이터를 읽어오거나, 클라이언트가 요청한 페이지의 정보에 접근할수있다.
	
	//response 는 서버에서 클라이언트로 보내는 응답을 처리하는데 사용되는 객체이다.
	//JSP 페이지 내부에서는 이 객체를 사용하여 동적 생성된 결과를 클라이언트에 전송하거나 HTTP응답에 관련된 다양한 정보를 설정할수있다.
	
	//Session 는 클라이언트와 서버간의 상태 정보를 유지하기위한 메커니즘이다.
	//웹 애플리에키션에서는 클라이언트가 서버에 접속하여 블라우저를 닫거나 세션 만료시간이 지나기전까지 지속되는 상태
	//정보를 저장힉위해 세션을 사용한다. 세션은 '쿠키'를 기반으로 하지만
	//쿠키와 달리 클라이언트 측에 저장되지 않고 서버측에 저장되어 보안상 이점이있다.
	
	//Cookie 는 브라우저에 저장되는 작은 텍스트 파일로 클라이언트와 서버간에 상태 정보를 유지하는데 사용된다.
	//웹 서버는 클라이언트에 쿠키를 생성하여 클라이언트가 웹 서버에 재요청 할떄마다 해당 쿠키를 함께 전송한다.
	//이를 통해 웹 애플리케이션은 클라이언트의 상태정보를 기억하고 클라이언트의 다양한 요청에 맞춤형 응답을 제공할수있다.
	
}
