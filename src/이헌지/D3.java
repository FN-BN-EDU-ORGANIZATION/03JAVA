package 이헌지;

public class D3 {




// 주석 (comment)

// 작성하는 프로그램의 크기가 커질수록 프로그램을 이해하고 변경하는 일이 점점 어려워진다. 심지어는 자신이 작성한 프로그램도 '내가 와 이랬노?' 라는 의문이 들기도 한다.
// 남이 작성한 코드를 이해한다는 것은 정말 쉬운 일이 아니다. 이러한 어려움을 덜기 위해 사용하는 것이 바로 주석이다. 
// 주석을 이용해서 프로그램 코드에 대한 설명을 적절히 덧붙여 놓으면 프로그램을 이해하는 데 많은 도움이 된다.
// 그 외에도 주석은 프로그램의 작성자, 작성일시, 버전과 그에 따른 변경이력 등의 정보를 제공할 목적으로 사용된다.
// 주석을 작성하는 방법은 다음과 같이 두 가지 방법이 있다. '/*' 와 '*/'사이에 주석을 넣는 방법과 앞에 '//'를 붙이는 방법이 있다.

// 범위 주석   '/*'와 '*/'사이의 내용은 주석으로 간주된다.
// 한 줄 주석  '//'부터 라인 끝까지의 내용은 주석으로 간주된다. 
// |참고|이 외에도 Java API문서와 같은 형식의 문서를 자동으로 만들 수 있는 주석(/**~*/)이 있지만 많이 사용되지는 않으므로 자세한 설명은 생략하겠다.
// 이 주석은 javadoc.exe에 의해서 html문서로 자동 변환되며,보다 자세한 내용은 인터넷에서 'javadoc'으로 검색하면 찾 을 수 있다.

// 다음은 주석의 몇 가지 사용 예인데 ----부분으로 처리 된 부분이 주석이다.

// 예제1)
////-------------------------------//
// |  /*                           |  
// |  Date   : 2016. 1. 3          |
// |  Source : Hello.java          |
// |  Author : 남궁성                |
// |  Email  : castello@naver.com  |
// |  */                           |
////-------------------------------//

//class Hello
//{
//	 public static void main (String[] args) /* 프로그램의 시작 */
//	 {
//		 System.out.println("Hello, world."); // Hello,world를 출력
//	 }
//}
// 컴파일러는 주석을 무시하고 건너뛰기 떄문에 위의 코드를 컴파일한 결과와 예시를 컴파일한 결과는 정확히 일치한다. 주석이 많다고 프로그램 성능이 떨어지는 일은 없으니 적극활용하자.!



// 한가지 주의해야할 점은 문자열을 의미하는 큰따옴표(")안에 주석이 있을 때는 주석이 아닌 문자열로 인식된다.

//예제 2) 


	public static void main(String[]args)
	{
		System.out.println("Hello./*이것은 주석 아님 */ world");
		System.out.println("Hello,world.// 이것도 주석아님");
	}
}


