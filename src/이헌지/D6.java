//package 이헌지;
//
//public class D6{ 
//	 

// 1.연산자(operator)
// 연산자는 '연산을 수행하는 기호'를 말한다. 예를 들어'+'기호는 덧셈 연산을 수행하며 '덧셈 연산자'라고 한다. 자바에서는 사칙연산(+,-,*./)을 
// 비롯해서 다양한 연산자들을 제공한다. 처음에는 배워야할 연산자가 많아 보이지만, 자주 쓰이는 것들을 중심으로 하나씩 배워나가면 쉽게 익숙해질 것이다.

// 1.1 연산자와 피연산자 
// 연산자가 연산을 수행하려면 반드시연산의 대상이 있어야하는데,이것을 '피연산자(operand)'라고 한다.피연산자로 상수,변수, 또는 식(式)등을 사용할 수 있다.
// 연산자(operator) 연산을 수행하는기호(+,-,*,/등), 피연산자(operand)연산자의 작업 대상(변수,상수,리터럴,수식)
// 다음과 같이'x + 3'이라는 식(式)이 있을 때,'+'는 두 피연산자를 더해서 그 결과를 반환하는 덧셈 연산자이고,변수 xdhk 상수3은 이 연산자의 피연산자이다.

//         연산자                                       
//          ↑         
//       x  +  3     
//       -     -      // 이처럼 덧셈연산자'+'는 두 값을 더한 결과를 반환하므로,두 개의 피연산자를 필요로 한다.    
//       \     /      // 대부분의 연산자는 이처럼 두 개의 피연산자를 필요로 하며,하나 또는 세개의 피연산자를 필요로 하는 연산자도 있다.
//        \   /       // 연산자는 피연산자로 연산을 수행하고 나면 항상 결과값을 반환한다. 예를 들어 x의 값이 5 일 떄,덧셈연산 'x+3'의 결과값은 8이 된다.
//         \ /        
//          ↓ 
//        피연산자     

// 1.2 식(式)과 대입연산자
// 연산자와 피연사자를 조합하여 계산하고자하는 바를 표현한 것을 '식(式, expression)'이 라고 한다.
// 그리고 식을 계산하여 결과를 얻는 것을 '식을 평가(evaluation)한다' 하나의 식을 평가(계산)하면, 단하나의 결과를 얻는다.
// 만일 x의 값이 5라면,아래의 식을 평한 결과는 23이 된다.
	
// 4 * x + 3
// 작성한 식을 프로그램에 포함시키려면, 식의 끝에 ';'를 붙여서 문장으로 만들어야 한다.
	
// 4 * x + 3; // 문장(statement) 
// 예를 들어 변수 x의 값이 5일 떄,위의 문장은 다음과 같은 과정으로 처리된다.
	
//    4 * x + 3;
//	→ 4 * 5 + 3;
//  → 23;  결과를 얻었지만 쓰이지 않고 사라진다.
	
// 식이 평가되어 23이라는 결과를 얻었지만, 이 값이 어디에도 쓰이지 않고 사라지기 때문에 이문장은 아무런 의미가 없다. 
// 그래서 아래와 같이 대입 연산자 '='를 사용해서 변수와 같이 값을 저장할 수 있는 공간에 결과를 저장해야한다.

//   y = 4 * x +3;	
// → y = 4 * 5 +3;	
// → y = 23; 식의 평과결과가 변수  y에 저장된다.
	
// 그 다음에는 	변수 y에 저장된 값을 다른 곳에 사용하거나 화면에 출력함으로써 의미있는 결과를 얻을 수 있다.

// y = 4 * x + 3;
// System.out.println(y);    변수 y의 값을 화면에 출력

// 만일 식의 평가결과를 출력하기만 원할 뿐,이 값을 다른 곳에 사용하지 않을 것이라면 다음과 같이 변수에 저장하지 않고 println메서드의 괄호()안에 
// 직접 식을 써도 된다.
	