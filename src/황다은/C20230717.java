package 황다은;

public class C20230717 {
	//자바메모리구조 이론 정리
	// 모든 자바 프로그램은 자바가상머신(Java virtual Machine : JVM)을 통해서 실행되어진다.
	// 자바 프로그램이 실행되면, JVM은 운영체제로부터 해당 프로그램을 수행할 수 있도록 필요한 메모리를 할당 받음
	
	//메모리 공간은 크게 Static영역, Stack영역, Heap영역으로 구분되어지고,
	//데이터타입(자료형)에 따라서 해당 공간에 할당된다.
	
	//Static area(스태틱 메모리 영역)
	//하나의 자바파일은 크게 필드,생성자,메소드로 구성된다.
	//그 중 필드부분에서 선언된 변수(전역변수)* 와 정적멤버변수(static이 붙은 자료형) Static영역에 데이터를 저장한다.
	//Static 영역의 데이터는 프로그램의 시작부터 종료가 될 때까지 메모리에 남아있게 된다.
	//즉, 전역변수가 프로그램이 종료될 때까지 어디서든 사용이 가능한 이유이다.
	//따라서, 전역변수를 무분별하게 많이 사용하다보면 메모리가 부족할 우려가 있어서
	//필요한 변수만 사용할 필요가 있다.
	
	/* *전역변수란?
	 * 클래스 내부에서 선언되지만 특정 메서드나 블록(scope)에 국한되지 않고 해당클래스의 모든 메서드에서 접근가능한 변수
	 * 전역변수는 해당클래스의 인스턴스변수로 선언되거나 클래스변수로 선언될 수 있다.
	 * 1.인스턴스변수 : 클래스내부에서 선언되며, 인스턴스가 생성될 때마다 해당변수의 복사본이 인스턴스와 함께 생성
	 * 				인스턴스변수는 객체의 속성이나 상태를 저장하는데 사용되어짐
	 * 				객체의 각 인스턴스마다 독립적인값으로 유지되어진다.
	 * 	인스턴스변수 예시
	 * public class Myclass{
	 * 		public int instanceVariable; //인스턴수변수선언
	 * }
	 * 
	 * 2. 클래스변수 : 클래스내부에서 'static'키워드로 선언되어짐
	 * 			   클래스 변수는 해당 클래스의 모든 인스턴스들이 공유하는 변수
	 * 			   모든 인스턴스가 동일한 값을 가지며, 한 인스턴스에서 값을 변경하면 다른 인스턴스에서도 변경된 값을 볼 수 있다.
	 * 	클래스변수 예시
	 * public calss Myclass{
	 * 		public static int classVariable; //클래스 변수 선언
	 * }`
	 */
	
	//stack area(스택메모리영역)
	//메소드 내에서 정의하는 기본자료형(int,double,byte,long,boolean등)에 해당되는 지역변수의 데이터의 값이 저장되는 공간이
	//Stack영역이다.
	//해당 메소드가 호출될 때 메모리를 할당되고 종료되면 메모리가 해제된다.
	
	public static void main(String[] args) {
		int a = 5;	a=4;	a=3;	a=2;
		System.out.println(a);
		for(int i=0; i<5;i++) {
	}
//		System.out.println(i); 컴파일 에러
	}
	//위의 소스코드처럼 a라는 변수는 main메소드가 호출될 때 Stack영역에 할당되고 종료시 해제된다.
	//또한 a라는 변수의 값이 5,4,3,2순으로 값을 할당하였고, 출력되는 값은 2가 출력됨.
	//이전데이터는 지워지는 것이고 2라는 값만 출력된다.
	//즉, Stack영역은 LIFO(Last In First Out)의 구조를 갖고 변수에 새로운 데이터가 할당되면 이전데이터는 지워진다.
	//또한, for문 내에 int i를 정의하였는데 for문이 종료된 다음 i를 출력하지 못하는 이유는 지역변수이므로 for문의 종료와 함께
	//Stack 영역에서 해제되었기 때문이다.
	
	/*지역변수란?
	 * 자바에서 지역변수는 메서드,생성자,블록내에서 선언되는 변수를 말한다.
	 * 지역변수는 해당블록내에서만 접근가능하며, 블록이 실행될 때 생성되고 블록이 종료되면 소멸된다.
	 * 지역변수는 메서드나 블록내에서 일시적인 데이터저장이나 제한된 범위에서만 사용해야하는 데이터를 저장하는데 사용됨	
	 * -지역변수 예시
	 * 	public class Myclass{
	 * 		public void myMethod(){
	 * 			int localVar = 10; 지역변수선언
	 * 			System.out.println(localVar);	지역변수사용
	 * 		}
	 * 	}
	 * 
	 * localVar은 myMethod메서드내에서 선언된 지역변수이다.
	 * 이변수는 myMethod내에서만 접근할 수 있습니다.
	 * 메서드실행히 변수가 생성되고, 메서드실행이 완료되면 변수가 소멸
	 * 지역변수는 메모리공간을 효율적으로 사용하며, 메서드 및 블록의 로컬상태를 저장하는데 유용하다
	 * 또한 지역변수의 유효범위가 제한적이기때문에 변수충돌과 같은 문제를 방지할 수 있다.
	 */
	
	//Heap area(힙메모리영역)
	//참조형의 데이터타입을 갖는 객체(인스턴스), 배열등은 Heap영역에 데이터가 저장된다
	//이때 변수(객체,객체변수,참조변수)는 Stack영역의 공간에서 실제 데이터가 저장된 Heap영역의 참조값을 new 연산자를 통해 리턴받음
	//다시 말하자면! 실제 데이터를 갖고있는 Heap영역의 참조 값을 Stack영역의 객체가 갖고있다.
	//이렇게 리턴받은 참조값을 갖고있는 객체를 통해서만 해당 인스턴스를 핸들할 수 있다.
}
