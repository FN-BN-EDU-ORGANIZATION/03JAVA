package 황다은;

public class C20230811 {
public static void main(String[] args) {
	//연산자
	// : 연산을 수행하는 기호(+, -, *, /...)
	//피연산자
	// : 연산자의 연산 수행 대상
	//ex) x + 3
	//x, 3 : 피연산자, + : 연산자
	
	//모든 연산자는 연산결과를 반환한다.
	
	//연산자의 종류
	//1. 산술연산자 : 사칙연산과 나머지 연산(%)
	// -> +, -, *, /, %
	//2. 비교연산자 : 크고 작음과 같고 다름을 비교
	// -> >, <, >=, <=, ==, !=
	//3. 논리연산자 : '그리고(AND)'와 '또는(OR)'으로 조건을 연결
	// -> &&, ||, !
	//4. 대입연산자 -> =
	//5. 기타연산자 : 형변환 연산자, 삼항 연산자, instanceof연산자
	// -> (type), ?:, instanceof
	
	
	//연산자의 우선순위
	// 하나의 식에 연산자가 둘 이상 있을 때 어떤 연산을 먼저 수행할지를 자동 결정하는 것
	//단항연산자 > 산술연산자 > 비교연산자 > 논리연산자 > 삼항연산자 > 대입연산자
	
	//연산자의 결합규칙
	//우선순위가 같은 연산자가 있을 때, 어떤 것을 더 먼저인지
	//대입과 단항 연산자를 제외하면 모두, 왼쪽 -> 오른쪽
	
	//증감 연산자(++) : 피연산자의 값을 1 증가시킨다.
	//감소 연산자(--) : 피연산자의 값을 1 감소시킨다.
	//전위형 : 값이 참조되기 전에 증가시킨다. ex) j = ++i;
	//후위형 : 값이 참조되기 후에 증가시킨다. ex) j = i++;
	// -> 증감 연산자가 독립적으로 사용된 경우 전위형과 후위형의 차이가 없다.
	//예시
	int i=5, j=0;
	j=i++;	//후위형
	System.out.println("j=i++ 실행후 i ="+i+", j ="+j);
	
	i=5;
	j=0;
	j=++i;	//전위형
	System.out.println("j=++i 실행후 i ="+i+", j ="+j);

	//형변환 연산자
	//형변환이란, 변수 또는 상수의 타입을 다른 타입으로 변환하는 것
	//자동형변환
	//컴파일러가 자동으로 형변환...
	//기존의 값을 최대한 보존할 수 있는 타입으로 자동 형변환된다.
	float f = 1234;
	System.out.println(f);
	//but
	//int k = 3.14f;		//에러
	//큰값을 작은값으로 할 때는 값손실이 일어나므로 자동형변환이 안된다.
	//따라서 직접 해줘야 함.
	int k = (int)3.14f;
	
	//ref) byte ->short,char(2byte)->int(4byte)
	//		->long(8byte)->float(4byte)->double(8byte)
	//byte b = 1000; 	//에러.byte타입의 범위(-128~127)를 벗어난 값의 대입
	byte b = (byte)1000; //ok. 하지만 값손실이 발생해서 변수b에는 -24가 저장됨
	System.out.println(b);
	
}
}
